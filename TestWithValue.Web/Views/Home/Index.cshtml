@using System.Security.Claims
@{
    var isLoggedIn = TempData["isLoggedIn"] != null && (bool)TempData["isLoggedIn"];
    var role = TempData["role"]?.ToString();
}
@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier); // دریافت UserId از Identity
}

<div>
    <h1>خوش آمدید!</h1>

    @if (isLoggedIn)
    {
        <div id="chatContainer">
            <h2>چت با پشتیبانی</h2>
            <div id="messages" style="height: 400px; overflow-y: scroll; border: 1px solid #ccc;"></div>

            <!-- Input برای عنوان تیکت -->
            <input type="text" id="ticketTitle" placeholder="عنوان تیکت خود را وارد کنید..." />

            <!-- Input برای پیام -->
            <input type="text" id="chatInput" placeholder="پیام خود را بنویسید..." />
            <button id="sendMessageButton">ارسال</button>
        </div>
    }
    else if (!isLoggedIn)
    {
        <p>برای چت با پشتیبانی وارد حساب کاربری خود شوید.</p>
    }
    else if (role == "Agent")
    {
        <p>شما به عنوان پشتیبان وارد شده‌اید. برای چت به صفحه پشتیبانی بروید.</p>
    }
</div>

@section Scripts {
    <!-- استفاده از CDN برای SignalR -->
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@7.0.12/dist/browser/signalr.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/supportHub") // آدرس Hub در سرور
                .build();

            // Event listener برای دریافت پیام از پشتیبان
            connection.on("ReceiveMessageFromAgent", function (agentId, message, ticketId) {
                const messagesDiv = document.getElementById("messages");
                const newMessage = document.createElement("div");
                newMessage.textContent = 'پشتیبان (' + agentId + '): ' + message + ' (Ticket ID: ' + ticketId + ')';
                messagesDiv.appendChild(newMessage);
            });

            // ارسال پیام به پشتیبان
            document.getElementById("sendMessageButton").addEventListener("click", function () {
                const message = document.getElementById("chatInput").value;
                const title = document.getElementById("ticketTitle").value; // دریافت عنوان تیکت
                const userId = '@userId'; // دریافت UserId از Identity

                if (message.trim() === "" || title.trim() === "") {
                    return; // اگر پیام یا عنوان خالی است، کاری انجام نده
                }

                // فراخوانی متد SendMessageToAgent با عنوان و پیام
                connection.invoke("SendMessageToAgent", userId, title, message)
                    .then(() => {
                        const messagesDiv = document.getElementById("messages");
                        const newMessage = document.createElement("div");
                        newMessage.textContent = 'شما: ' + message;
                        messagesDiv.appendChild(newMessage);

                        document.getElementById("chatInput").value = ""; // پاک کردن input بعد از ارسال
                    })
                    .catch(function (err) {
                        console.error(err);
                    });
            });

            // شروع اتصال به SignalR Hub
            connection.start().then(function () {
                console.log("اتصال برقرار شد.");
            }).catch(function (err) {
                console.error("مشکلی در اتصال به وجود آمده:", err);
            });
        });
    </script>
}
